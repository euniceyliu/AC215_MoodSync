- name: Run tests with proper permissions
      run: |
        cd src
        CONTAINER_NAME=$(docker-compose ps -q test-image)
        echo "Container ID: $CONTAINER_NAME"
        
        # Ensure proper permissions
        docker exec $CONTAINER_NAME bash -c "mkdir -p /coverage && chmod -R 777 /coverage"
        
        # Run tests with explicit coverage paths
        docker exec \
          -e COVERAGE_FILE=/coverage/.coverage \
          $CONTAINER_NAME \
          bash -c "cd /app && PYTHONPATH=/app pipenv run pytest \
          --cov=/app/src \
          --cov-report=xml:/coverage/coverage.xml \
          --cov-report=html:/coverage/htmlcov \
          /app/tests/"

    - name: Copy coverage reports
      if: always()
      run: |
        cd src
        CONTAINER_NAME=$(docker-compose ps -q test-image)
        if [ -z "$CONTAINER_NAME" ]; then
          echo "Error: Could not find test container"
          exit 1
        fi
        echo "Listing coverage directory contents:"
        docker exec $CONTAINER_NAME bash -c "ls -la /coverage"
        
        # Create local coverage directory
        mkdir -p ${{ github.workspace }}/coverage
        
        # Copy coverage files with verbose output
        echo "Copying coverage files..."
        docker cp $CONTAINER_NAME:/coverage/coverage.xml ${{ github.workspace }}/coverage/ || echo "Failed to copy coverage.xml"
        docker cp $CONTAINER_NAME:/coverage/htmlcov ${{ github.workspace }}/coverage/html || echo "Failed to copy html coverage"
        
        # Set permissions
        sudo chown -R $USER:$USER ${{ github.workspace }}/coverage
        
        echo "Local coverage directory contents:"
        ls -la ${{ github.workspace }}/coverage

    - name: Upload Coverage Report (XML)
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report-xml
        path: coverage/coverage.xml
        if-no-files-found: error

    - name: Upload Coverage Report (HTML)
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report-html
        path: coverage/html
        if-no-files-found: error