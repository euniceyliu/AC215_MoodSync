- name: Run tests with proper permissions
      run: |
        cd src
        CONTAINER_NAME=$(docker-compose ps -q test-image)
        echo "Container ID: $CONTAINER_NAME"
        
        # Ensure proper permissions and create coverage directory
        docker exec $CONTAINER_NAME bash -c "mkdir -p /coverage && chmod -R 777 /coverage"
        
        # Run tests with modified coverage paths
        docker exec \
          -e COVERAGE_FILE=/coverage/.coverage \
          $CONTAINER_NAME \
          bash -c "cd /app && PYTHONPATH=/app pipenv run pytest \
          --cov=src \
          --cov-report=term-missing \
          --cov-report=xml:/coverage/coverage.xml \
          --cov-report=html:/coverage/htmlcov \
          tests/ -v"
        
        # Debug: List coverage directory contents
        echo "Coverage directory contents in container:"
        docker exec $CONTAINER_NAME ls -la /coverage

    - name: Copy coverage reports
      if: always()
      run: |
        cd src
        CONTAINER_NAME=$(docker-compose ps -q test-image)
        
        # Create local coverage directory
        mkdir -p ${{ github.workspace }}/coverage
        chmod -R 777 ${{ github.workspace }}/coverage
        
        # Debug: Show container coverage contents
        echo "Container coverage directory contents:"
        docker exec $CONTAINER_NAME ls -la /coverage
        
        # Copy coverage files
        echo "Copying coverage files..."
        docker cp $CONTAINER_NAME:/coverage/. ${{ github.workspace }}/coverage/
        
        # Debug: Show local coverage contents
        echo "Local coverage directory contents:"
        ls -la ${{ github.workspace }}/coverage
        
        # Set permissions
        sudo chown -R $(id -u):$(id -g) ${{ github.workspace }}/coverage

    - name: Upload Coverage Report (XML)
      if: always()
      continue-on-error: true
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report-xml
        path: ${{ github.workspace }}/coverage/coverage.xml
        if-no-files-found: warn

    - name: Upload Coverage Report (HTML)
      if: always()
      continue-on-error: true
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report-html
        path: ${{ github.workspace }}/coverage/htmlcov
        if-no-files-found: warn

    # Add a step to check if tests generated coverage files
    - name: Verify Coverage Files
      if: always()
      run: |
        echo "Current directory:"
        pwd
        echo "Coverage directory contents:"
        ls -la ${{ github.workspace }}/coverage || echo "Coverage directory not found"
        echo "Full directory structure:"
        find ${{ github.workspace }} -name "coverage.xml" -o -name "htmlcov"